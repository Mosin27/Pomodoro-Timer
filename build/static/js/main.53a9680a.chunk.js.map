{"version":3,"sources":["utils/duration/index.js","pomodoro/ProgressBar.js","pomodoro/Session.js","pomodoro/Pomodoro.js","utils/class-names/index.js","utils/useInterval/index.js","App.js","index.js"],"names":["minutesToDuration","givenMinutes","minutes","Math","floor","toString","padStart","secondsToDuration","givenSeconds","seconds","round","ProgressBar","session","breakDuration","focusDuration","duration","label","progress","timeRemaining","className","style","height","role","aria-valuemin","aria-valuemax","aria-valuenow","width","Session","isTimerRunning","data-testid","nextTick","prevState","max","nextSession","currentSession","Pomodoro","classNameToBoolean","useState","setIsTimerRunning","setSession","setFocusDuration","setBreakDuration","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","Audio","play","type","onClick","disabled","aria-label","title","nextState","prevStateSession","console","log","oi","Object","entries","reduce","classes","value","concat","undefined","filter","join","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53a9680a.chunk.js","sourcesContent":["/**\n * Formats a number of minutes as 'mm:00'.\n *\n * For example,\n *    minutesToDuration(3) = '03:00'\n *    minutesToDuration(45) = '45:00'\n *\n * @param givenMinutes\n *    the number of minutes in the duration\n * @returns {string}\n *    the given minutes formatted as 'mm:00'\n */\n\nexport function minutesToDuration(givenMinutes) {\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\n  return `${minutes}:00`;\n}\n\n/**\n * Formats a number of seconds as 'mm:ss'.\n *\n * For example,\n *    secondsToDuration(305) = '05:05'\n *    secondsToDuration(930) = '15:30'\n *\n * @param givenSeconds\n *    the number of seconds in the duration\n * @returns {string}\n *    the given seconds formatted as 'mm:ss'\n */\n\nexport function secondsToDuration(givenSeconds) {\n  const minutes = Math.floor((givenSeconds % 3600) / 60)\n    .toString()\n    .padStart(2, \"0\");\n  const seconds = Math.round(givenSeconds % 60)\n    .toString()\n    .padStart(2, \"0\");\n  return `${minutes}:${seconds}`;\n}\n","import React from \"react\";\r\n\r\nfunction ProgressBar( { session, breakDuration, focusDuration }) {\r\n\r\n    let duration = session?.label === \"Focusing\" ? focusDuration * 60 :  breakDuration * 60;\r\n    let progress = ((duration - session?.timeRemaining) / duration) * 100;\r\n\r\n    return (\r\n        <div className=\"row mb-2-blue\">\r\n          <div className=\"col\">\r\n            <div className=\"progress\" style={{ height: \"20px\" }}>\r\n                <div\r\n                className=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                aria-valuenow={progress} // TODO: Increase aria-valuenow as elapsed time increases\r\n                style={{ width: `${progress}%` }} // TODO: Increase width % as elapsed time increases\r\n                />\r\n            </div>\r\n          </div>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default ProgressBar;","import React from \"react\";\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\n\r\nfunction Session({ session, minutesToDuration, secondsToDuration, focusDuration, breakDuration, isTimerRunning }) {\r\n    \r\n   if (session) { \r\n    return (\r\n        <>\r\n        <div className=\"row mb-2\">\r\n            <div className=\"col\">\r\n                {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\r\n                <h2 data-testid=\"session-title\">\r\n                    {session.label} for {minutesToDuration(session.label === \"Focusing\" ? focusDuration : breakDuration)} minutes\r\n                 </h2>\r\n                {/* TODO: Update message below correctly format the time remaining in the current session */}\r\n                 <p className=\"lead\" data-testid=\"session-sub-title\">\r\n                {secondsToDuration(session?.timeRemaining)} remaining\r\n                </p>\r\n                <h3>{!isTimerRunning ? \"PAUSED\": null}</h3>\r\n            </div>\r\n        </div>\r\n            <ProgressBar session={session} focusDuration={focusDuration} breakDuration={breakDuration} />\r\n        </> \r\n    )\r\n   } else {\r\n       return null;\r\n   } \r\n    \r\n}\r\n\r\nexport default Session;","import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { secondsToDuration } from \"../utils/duration\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport Session from \"./Session\";\n\n// These functions are defined outside of the component to ensure they do not have access to state\n// and are, therefore, more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return {\n    ...prevState,\n    timeRemaining,\n  };\n}\n\n/**\n * Higher-order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return (currentSession) => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60,\n      };\n    }\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60,\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  // The current session - null where there is no session running\n  const [session, setSession] = useState(null);\n\n  // ToDo: Allow the user to adjust the focus and break duration.\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You won't need to make changes to the callback function\n   */\n  useInterval(() => {\n      if (session.timeRemaining === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n        return setSession(nextSession(focusDuration, breakDuration));\n      }\n      return setSession(nextTick);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    setIsTimerRunning((prevState) => {\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60,\n            };\n          }\n          return prevStateSession;\n        });\n      }\n      return nextState;\n    });\n    console.log(isTimerRunning)\n  }\n\nfunction handleDecreaseFocusDuration(){\n  return focusDuration === 5 ? 5 : setFocusDuration((duration) => duration - 5) \n  \n}\n\nfunction handleIncreaseFocusDuration(){\n  return focusDuration === 60 ? 60 : setFocusDuration((duration) => duration + 5)\n}\n\nfunction handleDecreaseBreakDuration(){\n  return breakDuration === 1 ? 1 : setBreakDuration((duration) => duration - 1)\n}\n\nfunction handleIncreaseBreakDuration(){\n  return breakDuration === 15 ? 15 : setBreakDuration((duration) => duration + 1)\n}\n\nfunction handleStopButton(){\n  setIsTimerRunning(false);\n  setSession(null)\n}\n\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick={handleDecreaseFocusDuration}\n                disabled={session}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={handleIncreaseFocusDuration}\n                disabled={session}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(breakDuration)} \n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick={handleDecreaseBreakDuration}\n                  disabled={session}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick={handleIncreaseBreakDuration}\n                  disabled={session}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n            {/* TODO: Disable the stop button when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"stop\"\n              title=\"Stop the session\"\n              disabled={!session}\n              onClick={handleStopButton}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n        <Session \n          session={session} \n          minutesToDuration={minutesToDuration} \n          secondsToDuration={secondsToDuration} \n          focusDuration={focusDuration}\n          breakDuration={breakDuration}\n          nextSession={nextSession}\n          isTimerRunning={isTimerRunning}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n","/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}